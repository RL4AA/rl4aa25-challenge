import{S as x,R as S,V as g,A as C,P as A,W as M,O as P,D as E,a as v,E as B,b as R,U as k,B as L,M as p,c as f,d as D,e as _,f as W,g as T,h,G as O}from"./three-BnL_01Ht.js";import{P as y}from"./plotly-C3pusPLE.js";import"./index-DLV4xO1B.js";(function(){const e=document.createElement("link").relList;if(e&&e.supports&&e.supports("modulepreload"))return;for(const n of document.querySelectorAll('link[rel="modulepreload"]'))s(n);new MutationObserver(n=>{for(const i of n)if(i.type==="childList")for(const o of i.addedNodes)o.tagName==="LINK"&&o.rel==="modulepreload"&&s(o)}).observe(document,{childList:!0,subtree:!0});function t(n){const i={};return n.integrity&&(i.integrity=n.integrity),n.referrerPolicy&&(i.referrerPolicy=n.referrerPolicy),n.crossOrigin==="use-credentials"?i.credentials="include":n.crossOrigin==="anonymous"?i.credentials="omit":i.credentials="same-origin",i}function s(n){if(n.ep)return;n.ep=!0;const i=t(n);fetch(n.href,i)}})();function I(d){return d&&d.__esModule&&Object.prototype.hasOwnProperty.call(d,"default")?d.default:d}class F{constructor(e,t="en"){this.language=t,this.translations={de:{toggleModel:"Bildschirm umschalten"},en:{toggleModel:"Toggle Screen"}},this.ws=null,this.reconnectAttempts=0,this.max_reconnect_attempts=5,this.reconnect_delay=2e3,this.isSceneReady=!1,this.newDataAvailable=!1,this.particleCount=1e3,this.particles=[],this.segmentsCount=7,this.segmentDistances=[],this.segmentStartPoints=[],this.totalPathLength=0,this.totalProgress=0,this.particleSpeed=.1,this.currentData=null,this.animationRunning=!0,this.scene=new x,this.scene.name="Scene",this.camera=this.setupCamera(),this.renderer=this.setupRenderer(e),this.controls=this.setupOrbitalControls(),this.composer=this.setupPostProcessing(),this.aresModel=null,this.undulatorModel=null,this.objectsToRender=["ares","undulator"],this.objToRender=this.objectsToRender[0],this.raycaster=new S,this.mouse=new g,this.setupLighting(),this.createReflectivePlane(),this.setupTargetPoint(),this.createControlPanel(),this.loadModels(),this.createPlotWindow();const s=new C(.25);s.name="AxesHelper",this.scene.add(s),this.setupEventListeners(),this.updateButtonLabels(),this.createParticles(),this.setupWebSocket(),this.startAnimation()}setupCamera(){const e=new A(75,window.innerWidth/window.innerHeight,.1,1e3);return e.position.set(-1.5,.75,-1.5),e.updateMatrixWorld(),e}setupRenderer(e){const t=new M({alpha:!1});return t.setSize(window.innerWidth,window.innerHeight),document.getElementById(e).appendChild(t.domElement),t}setupOrbitalControls(){const e=new P(this.camera,this.renderer.domElement);return e.target.set(0,0,2.0460399985313416),e.minDistance=0,e.maxDistance=40,e.minPolarAngle=0,e.maxPolarAngle=Math.PI,e.update(),e}setupLighting(){const e=new E(16777215,1);e.position.set(50,50,50),e.castShadow=!1,e.name="TopDirectionalLight",this.scene.add(e);const t=new v(16777215,.5);t.name="AmbientLight",this.scene.add(t)}setupPostProcessing(){const e=new B(this.renderer);e.addPass(new R(this.scene,this.camera));const t={strength:.25,radius:1,threshold:.1},s=new k(new g(window.innerWidth,window.innerHeight),t.strength,t.radius,t.threshold);return e.addPass(s),e}setupTargetPoint(){const e=new L(.004,.002,.003),t=new p({color:16711680,transparent:!0,opacity:.5}),s=new f(e,t);s.position.copy(this.controls.target),s.name="TargetPoint",this.scene.add(s)}setupEventListeners(){window.addEventListener("resize",()=>{this.camera.aspect=window.innerWidth/window.innerHeight,this.camera.updateProjectionMatrix(),this.renderer.setSize(window.innerWidth,window.innerHeight)}),window.addEventListener("pagehide",()=>{window.myBroadcastChannel&&(window.myBroadcastChannel.close(),window.myBroadcastChannel=null),this.websocket&&this.websocket.close()});const e=document.getElementById("toggle-model");e&&e.addEventListener("click",this.toggleModel.bind(this));const t=4;let s,n;document.addEventListener("pointerdown",o=>{s=o.pageX,n=o.pageY}),document.addEventListener("pointerup",o=>{const a=Math.abs(o.pageX-s),l=Math.abs(o.pageY-n);a<t&&l<t&&this.handlePointerClick(o)}),Array.from(document.getElementsByClassName("closeButton")).forEach(o=>o.addEventListener("click",this.hideTextBoxes.bind(this)))}createReflectivePlane(){const e=new D(200,200),t=new _(e,{clipBias:.003,textureWidth:window.innerWidth*window.devicePixelRatio,textureHeight:window.innerHeight*window.devicePixelRatio,color:53687091});t.rotateX(-Math.PI/2),t.position.y=-1.4,t.name="Reflector",this.scene.add(t)}createControlPanel(){const e=document.createElement("div");e.style.position="absolute",e.style.top="20px",e.style.left="20px",e.style.backgroundColor="rgba(0, 0, 0, 0.5)",e.style.padding="10px",e.style.borderRadius="5px",e.style.zIndex="101",e.style.color="#fff",e.style.fontFamily="Arial, sans-serif",e.style.fontSize="12px";const t=document.createElement("h3");t.textContent="Control Panel: Magnet Strength & Steering Angles",t.style.margin="0 0 10px 0",t.style.fontSize="14px",t.style.textAlign="center",e.appendChild(t);const s=[{id:"AREAMQZM1",type:"k1",label:"AREAMQZM1",min:-72,max:72,step:1,initial:0},{id:"AREAMQZM2",type:"k1",label:"AREAMQZM2",min:-72,max:72,step:1,initial:0},{id:"AREAMCVM1",type:"angle",label:"AREAMCVM1",min:-.0061782,max:.0061782,step:123564e-9,initial:0},{id:"AREAMQZM3",type:"k1",label:"AREAMQZM3",min:-72,max:72,step:.01,initial:0},{id:"AREAMCHM1",type:"angle",label:"AREAMCHM1",min:-.0061782,max:.0061782,step:123564e-9,initial:0},{id:"particleSpeed",type:"speed",label:"Particle Speed",min:.001,max:1,step:.001,initial:.1},{id:"scaleBeamSpread",type:"speed",label:"Scale beam width",min:1,max:100,step:1,initial:15},{id:"scaleBeamPosition",type:"speed",label:"Scale beam position",min:1,max:101,step:1,initial:50}];this.controlSliders={},this.defaultValues={},s.forEach(o=>{const a=document.createElement("div");a.style.marginBottom="8px";const l=document.createElement("label");l.textContent=o.label,l.htmlFor=o.id,l.style.display="block",l.style.marginBottom="4px";const r=document.createElement("input");r.type="range",r.id=o.id,r.min=o.min,r.max=o.max,r.step=o.step,r.value=o.initial,r.style.width="150px";const c=document.createElement("span");c.id=`${o.id}-value`,c.textContent=o.initial,c.style.marginLeft="8px",this.defaultValues[o.id]=o.initial,r.addEventListener("input",()=>{c.textContent=r.value,this.updateControls(o.id)}),a.appendChild(l),a.appendChild(r),a.appendChild(c),e.appendChild(a),this.controlSliders[o.id]=r});const n=document.createElement("button");n.textContent="Reset",n.style.marginTop="10px",n.style.width="50%",n.style.padding="5px",n.style.border="none",n.style.borderRadius="3px",n.style.cursor="pointer",n.style.backgroundColor="#4885a8",n.style.color="#fff",n.style.fontSize="12px",n.addEventListener("click",()=>{Object.keys(this.controlSliders).forEach(o=>{this.controlSliders[o].value=this.defaultValues[o],document.getElementById(`${o}-value`).textContent=this.defaultValues[o]}),this.updateControls()}),e.appendChild(n);const i=document.getElementById("container3D");i&&i.appendChild(e)}createPlotWindow(){const e=document.createElement("div");e.style.position="fixed",e.style.top="10px",e.style.right="10px",e.style.width="400px",e.style.height="300px",e.style.backgroundColor="white",e.style.border="2px solid black",e.style.boxShadow="0 4px 8px rgba(0, 0, 0, 0.2)",e.style.padding="10px",e.style.zIndex="1000",this.plotContainer=document.createElement("div"),this.plotContainer.id="dynamicPlot",this.plotContainer.style.width="100%",this.plotContainer.style.height="100%",this.plotContainer.style.minHeight="250px",this.plotContainer.style.overflow="auto",e.appendChild(this.plotContainer),document.body.appendChild(e);let t=!1,s,n;e.addEventListener("mousedown",a=>{t=!0,s=a.clientX-e.getBoundingClientRect().left,n=a.clientY-e.getBoundingClientRect().top,e.style.cursor="move"}),document.addEventListener("mousemove",a=>{if(t){const l=a.clientX-s,r=a.clientY-n;e.style.left=`${l}px`,e.style.top=`${r}px`}}),document.addEventListener("mouseup",()=>{t=!1,e.style.cursor="default"});const i={title:{text:"Particle Beam (bunch count: 0)",font:{family:"Arial, sans-serif",size:16,color:"white"},x:.5},xaxis:{title:{text:"X position (mm)",font:{size:14,color:"white"}},range:[-4,4],showgrid:!0,zeroline:!1,tickfont:{color:"white"},gridcolor:"white"},yaxis:{title:{text:"Y position (mm)",font:{size:14,color:"black"}},range:[-2,2],showgrid:!0,zeroline:!1,tickfont:{color:"white"},gridcolor:"white"},margin:{l:100,r:20,t:40,b:50},autosize:!0,paper_bgcolor:"black",plot_bgcolor:"black"},o={z:Array.from({length:510},()=>Array(612).fill(null)),x:[...Array(612).keys()],y:[...Array(510).keys()],type:"heatmap",colorscale:"Viridis",showscale:!0};y.newPlot(this.plotContainer.id,[o],i)}updatePlot(){if(!this.currentData||!this.currentData.bunch_count||!this.currentData.screen_boundary_x||!this.currentData.screen_boundary_y){console.warn("No valid bunch count or boundary data available.");return}const e=this.currentData.screen_reading,t=e.length,s=e[0]?e[0].length:0,n=-this.currentData.screen_boundary_x*1e3,i=this.currentData.screen_boundary_x*1e3,o=-this.currentData.screen_boundary_y*1e3,a=this.currentData.screen_boundary_y*1e3,l=Array.from({length:s},(w,m)=>n+(m+.5)*(i-n)/s),r=Array.from({length:t},(w,m)=>o+(m+.5)*(a-o)/t),c={z:e,x:l,y:r,type:"heatmap",colorscale:"Viridis",showscale:!0},u=document.getElementById("dynamicPlot").layout,b={title:{text:`Particle Beam (bunch count: ${this.currentData.bunch_count})`,font:{family:"Arial, sans-serif",size:16,color:"white"},x:.5},xaxis:{title:{text:"X position (mm)",font:{family:"Arial, sans-serif",size:14,color:"white"}},range:u?u.xaxis.range:[n,i],showgrid:!0,zeroline:!1,tickfont:{color:"white"},gridcolor:"white"},yaxis:{title:{text:"Y position (mm)",font:{family:"Arial, sans-serif",size:14,color:"white"},standoff:20},range:u?u.yaxis.range:[o,a],showgrid:!0,zeroline:!1,scaleanchor:"x",tickfont:{color:"white"},gridcolor:"white"},margin:{l:100,r:30,t:40,b:50},autosize:!0,paper_bgcolor:"black",plot_bgcolor:"black"};y.react("dynamicPlot",[c],b)}createParticles(){console.log("Create particles ...");const e=new W(1e-4,8,8),t=new p({color:5439309,transparent:!0,opacity:1,blending:T});for(let s=0;s<this.particleCount;s++){const n=new f(e,t);this.particles.push({mesh:n,segment:s%this.segmentsCount,index:s,progress:0,currentPosition:new h,startPosition:new h,targetPosition:new h}),n.name="Sphere_"+s,this.scene.add(n)}console.log(`Total particles created: ${this.particles.length}`)}loadModels(){const e=new O,t="/";console.log("Base URL:",t),e.load(`${t}models/ares/scene.glb`,s=>{this.aresModel=s.scene,this.scene.add(this.aresModel),this.scene.traverseVisible(n=>{n.material&&this.getRelatedObjectNames(n).length>0&&(n.material=n.material.clone())}),this.objToRender==="undulator"&&(this.aresModel.visible=!1),console.log("Ares model loaded")},void 0,s=>console.error("Error loading Ares model:",s)),e.load(`${t}models/undulator/scene.glb`,s=>{this.undulatorModel=s.scene,this.scene.add(this.undulatorModel),this.scene.traverseVisible(i=>{i.material&&this.getRelatedObjectNames(i).length>0&&(i.material=i.material.clone())}),this.objToRender==="ares"&&(this.undulatorModel.visible=!1);const n=document.getElementById("toggle-model");n&&(n.disabled=!1),console.log("Undulator model loaded")},void 0,s=>console.error("Error loading Undulator model:",s))}toggleModel(){this.hideTextBoxes(),this.objToRender==="ares"?(this.objToRender="undulator",this.aresModel.visible=!1,this.undulatorModel.visible=!0,this.pauseAnimation()):(this.objToRender="ares",this.undulatorModel.visible=!1,this.aresModel.visible=!0,this.startAnimation())}findObjectByName(e){let t=null;return this.scene.traverse(s=>{s.name===e&&(t=s)}),t}startAnimation(){this.animationRunning=!0,this.animate()}pauseAnimation(){this.animationRunning=!1}animate(){if(requestAnimationFrame(this.animate.bind(this)),this.animationRunning&&this.newDataAvailable){const e=this.getElapsedTime();console.debug("deltaTime:",e),this.totalProgress+=e*this.particleSpeed/this.totalPathLength,this.totalProgress=Math.min(this.totalProgress,1),console.debug("totalProgress:",this.totalProgress);const t=this.totalProgress*this.totalPathLength;console.debug("distanceTraveled:",t);const{segmentIndex:s,segmentProgress:n}=this.findCurrentSegment(t);console.debug("segmentIndex:",s,"segmentProgress:",n);let i=this.currentData.segments[`segment_${s}`],o=s===this.segmentsCount-1?i:this.currentData.segments[`segment_${s+1}`];if(!i||s<this.segmentsCount-1&&!o){console.error(`Segment data missing: current=${s}, next=${s+1}`,"Available segments:",Object.keys(this.currentData.segments)),this.newDataAvailable=!1;return}console.debug("currentSegment:",i.segment_name,"nextSegment:",o.segment_name),this.particles.forEach((a,l)=>{const r=new h(...i.positions[l]),c=new h(...o.positions[l]);a.mesh.position.lerpVectors(r,c,n),console.debug(`Particle ${l} position:`,a.mesh.position.z),a.mesh.material.opacity=1,a.mesh.visible=!0,this.totalProgress>=1&&s===this.segmentsCount-1&&n>=1&&(this.newDataAvailable=!1,console.debug(`Animation completed for all ${this.segmentsCount} segments`))})}this.renderer.render(this.scene,this.camera),this.composer.render()}calculateSegmentDistances(){const e=this.currentData.component_positions;this.segmentStartPoints=[],this.segmentDistances=[],this.totalPathLength=0;const t=e[0];this.segmentDistances.push(t),this.totalPathLength+=t,this.segmentStartPoints.push(this.totalPathLength);for(let s=0;s<e.length-1;s++){const n=e[s+1]-e[s];this.segmentDistances.push(n),this.totalPathLength+=n,this.segmentStartPoints.push(this.totalPathLength)}console.debug("Segment start points:",this.segmentStartPoints),console.debug("Segment relative distances:",this.segmentDistances),console.debug("Total segment path length:",this.totalPathLength)}findCurrentSegment(e){if(this.segmentDistances.length===0||this.segmentStartPoints.length===0)return console.warn("Segment distances or start points not calculated!"),{segmentIndex:0,segmentProgress:0};if(console.debug("distanceTraveled:",e,"totalPathLength:",this.totalPathLength),e>=this.totalPathLength)return console.debug("Reached or exceeded total path length, returning last segment"),{segmentIndex:this.segmentsCount-1,segmentProgress:1};for(let t=0;t<this.segmentStartPoints.length-1;t++){const s=this.segmentStartPoints[t],n=this.segmentStartPoints[t+1];if(console.debug("segment [start, end]",s,n),e>=s&&e<n){const i=this.segmentDistances[t+1],o=e-s,a=o/i;return console.debug("distanceInSegment: ",o),console.debug("segmentDistance: ",i),console.debug(`Segment ${t}: ${s} to ${n}, progress: ${a}`),{segmentIndex:t,segmentProgress:Math.min(Math.max(a,0),1)}}}return{segmentIndex:this.segmentsCount-1,segmentProgress:0}}getElapsedTime(){return(performance.now()-this.startTime)/1e3}setupWebSocket(){this.ensureConnectionStatusElement(),this.initializeScene().then(()=>this.connectWebSocket())}initializeScene(){return new Promise(e=>{const t=()=>{this.aresModel&&this.undulatorModel?(this.isSceneReady=!0,console.log("Scene is ready for WebSocket connection"),e()):(console.log("Waiting for scene initialization..."),setTimeout(t,100))};t()})}getWebSocketUrl(){const e="ws://0.0.0.0:8081";return console.log("WebSocket URL from env:",e),e}connectWebSocket(){if(!this.isSceneReady){console.log("Cannot connect WebSocket - scene not ready");return}if(this.reconnectAttempts>=this.max_reconnect_attempts){this.updateConnectionStatus(!1,"Connection failed after multiple attempts");return}try{this.updateConnectionStatus(!1,"Connecting...");const e=this.getWebSocketUrl();console.log("Attempting to connect to:",e),this.ws=new WebSocket(e),this.ws.onopen=()=>{console.log("WebSocket connected successfully"),this.reconnectAttempts=0,this.updateConnectionStatus(!0,"Connected")},this.ws.onmessage=t=>{try{const s=JSON.parse(t.data);console.log("WebSocket Data Update: Refreshing the scene and plot or restarting the animation!"),this.updateSceneFromWebSocket(s),this.updatePlot()}catch(s){console.error("Error processing WebSocket message:",s)}},this.ws.onerror=t=>{console.error("WebSocket error:",t),this.updateConnectionStatus(!1,`Connection error: ${t.message}`)},this.ws.onclose=t=>{console.log("WebSocket closed:",t),this.updateConnectionStatus(!1,"Disconnected"),this.reconnectAttempts++,t.wasClean||setTimeout(()=>this.connectWebSocket(),this.reconnect_delay)}}catch(e){console.error("WebSocket connection error:",e),this.reconnectAttempts++,setTimeout(()=>this.connectWebSocket(),this.reconnect_delay)}}updateSceneFromWebSocket(e){if(console.debug(`Received WebSocket message: ${JSON.stringify(e,null,2)}`),!(e!=null&&e.segments)){console.warn("Invalid WebSocket data received");return}this.currentData=e,console.debug("Available segments:",Object.keys(this.currentData.segments)),this.segmentDistances.length===0&&this.calculateSegmentDistances(),this.totalProgress=0,this.startTime=performance.now(),this.newDataAvailable=!0;const t=this.currentData.segments.segment_0;this.particles.forEach((s,n)=>{s.mesh.position.set(...t.positions[n])}),console.debug("Particles reset to AREASOLA1")}handlePointerClick(e){const t=Array.from(document.getElementsByClassName("text-box"));t.some(i=>i.contains(e.target))||(t.forEach(i=>{i.hidden=!0}),this.setBloomByName([])),this.mouse.x=e.clientX/window.innerWidth*2-1,this.mouse.y=-(e.clientY/window.innerHeight)*2+1,this.raycaster.setFromCamera(this.mouse,this.camera),this.raycaster.layers.set(0);const n=this.raycaster.intersectObjects(this.scene.children,!0);if(n.length>0){const i=n[0].object,o=this.getRelatedObjectNames(i);this.setBloomByName(o),this.fillTextBox(i.name)}}hideTextBoxes(){Array.from(document.getElementsByClassName("text-box")).forEach(t=>{t.hidden=!0}),this.setBloomByName([])}fillTextBox(e){Array.from(document.getElementsByClassName("text-box")).forEach(i=>i.hidden=!0);const s={Electronsource:"electronsource",Circle:"beam",TorusCore:"torus",TorusShell:"torus",Quadruplecore:"quadcore",Quadruplecoils:"quadcore",Steerercoil:"steering",SteererCore:"steering",Screen:"screen",BodyWithLence:"camera",Cube:"undulator"},n=Object.keys(s).find(i=>e.startsWith(i));if(n){const i=`text-box-${s[n]}-${this.language}`,o=document.getElementById(i);o&&(o.hidden=!1)}}updateButtonLabels(){const e=document.getElementById("toggle-model");e&&(e.textContent=this.translations[this.language].toggleModel)}updateControls(e=null){if(!this.controlSliders)return;const t={AREAMQZM1:parseFloat(this.controlSliders.AREAMQZM1.value),AREAMQZM2:parseFloat(this.controlSliders.AREAMQZM2.value),AREAMCVM1:parseFloat(this.controlSliders.AREAMCVM1.value),AREAMQZM3:parseFloat(this.controlSliders.AREAMQZM3.value),AREAMCHM1:parseFloat(this.controlSliders.AREAMCHM1.value),particleSpeed:parseFloat(this.controlSliders.particleSpeed.value),scaleBeamSpread:parseFloat(this.controlSliders.scaleBeamSpread.value),scaleBeamPosition:parseFloat(this.controlSliders.scaleBeamPosition.value)};if(this.particleSpeed=t.particleSpeed,e){const n=this.controlSliders[e];e==="particleSpeed"?this.particleSpeed=parseFloat(n.value):t[e]=parseFloat(n.value)}else parseFloat(this.controlSliders.AREAMQZM1.value),parseFloat(this.controlSliders.AREAMQZM2.value),parseFloat(this.controlSliders.AREAMCVM1.value),parseFloat(this.controlSliders.AREAMQZM3.value),parseFloat(this.controlSliders.AREAMCHM1.value),parseFloat(this.controlSliders.particleSpeed.value),parseFloat(this.controlSliders.scaleBeamSpread.value),parseFloat(this.controlSliders.scaleBeamPosition.value);const s={controls:{...t}};delete s.controls.particleSpeed,console.debug(`Sending update for ${e||"all controls"}:`,JSON.stringify(s)),this.ws&&this.ws.readyState===WebSocket.OPEN?this.ws.send(JSON.stringify(s)):console.warn("WebSocket not ready. Message not sent.")}getRelatedObjectNames(e){return[["Electronsource"],["Quadruplecore","Quadruplecoils","Quadruplecore_1","Quadruplecore_2","Quadruplecore_3","Quadruplecoils_1","Quadruplecoils_2","Quadruplecoils_3"],["Circle","Circle002"],["VerticalCorrectorcoil","VerticalCorrectorcore","Steerercoil_1","Steerercoil_2","SteererCore_1","SteererCore_2"],["Screen"],["TorusCore","TorusShell","Cavities"],["BodyWithLence","BodyWithLence_1","BodyWithLence_2","BodyWithLence_3","BodyWithLence_4"],["Cube002","Cube003","Cube018","Cube015","Cube016","Cube017","Cube014","Cube013","Cube012","Cube001","Cube004","Cube005","Cube008","Cube007","Cube006","Cube009","Cube010","Cube011"]].find(s=>s.includes(e.name))||[]}setBloomByName(e){this.scene.traverseVisible(t=>{t.material&&(e.includes(t.name)?(t.material.emissive.setHex(16777215),t.name!=="Circle"&&t.name!=="Circle002"&&(t.material.emissiveIntensity=.3)):t.name==="Circle"||t.name==="Circle002"?t.material.emissive.setHex(5439309):t.material.emissiveIntensity=0)})}ensureConnectionStatusElement(){let e=document.getElementById("websocket-status");if(!e){e=document.createElement("div"),e.id="websocket-status",e.style.position="absolute",e.style.bottom="10px",e.style.left="50%",e.style.transform="translateX(-50%)",e.style.padding="5px 10px",e.style.borderRadius="4px",e.style.fontFamily="monospace",e.style.zIndex="100",e.style.maxWidth="80%",e.style.wordWrap="break-word";const t=document.getElementById("container3D");t&&t.appendChild(e)}}updateConnectionStatus(e,t){const s=document.getElementById("websocket-status");s?(s.textContent=t,s.className=e?"connected":"disconnected",s.style.color=e?"#006400":"#640000",s.style.backgroundColor=e?"rgba(0, 255, 0, 0.2)":"rgba(255, 0, 0, 0.2)"):console.warn("WebSocket status element not found")}}window.addEventListener("DOMContentLoaded",()=>{const e=new URLSearchParams(window.location.search).get("language")||"de";new F("container3D",e)});export{I as g};
